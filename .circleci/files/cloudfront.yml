Description: >
  Cloudfront distribution for UdaPeople.

Parameters:
  WorkflowID:
    Description: Unique identifier.
    Type: String
  # S3Bucket:
  #   Description: S3 Bucket
  #   Type: String
Resources:
  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Origin Access Identity for Serverless Static Website

  WebpageCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub "udapeople-${WorkflowID}.s3.amazonaws.com"
            Id: webpage
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}" # this makes it so, s3 content is available only through cloudfront and s3 url wont serve items. It does not remove the existing permissions though
        Enabled: True
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: False
          TargetOriginId: webpage
          ViewerProtocolPolicy: allow-all
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Fn::ImportValue: !Sub ${S3Bucket}
      PolicyDocument:
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            # Principal: "*"
            Principal: !Sub "arn:aws:iam::cloudfront:user/${CloudFrontOriginAccessIdentity}"
            Action: s3:GetObject
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Fn::ImportValue: !Sub "${S3Bucket}/*"
    # - "/*"
    # Resource: !Join ["", ["arn:aws:s3:::", Fn::ImportValue: !Sub ${S3Bucket}, /*]]

Outputs:
  WorkflowID:
    Value: !Sub "${WorkflowID}"
    Description: URL for website hosted on S3
    Export:
      Name: WorkflowID
